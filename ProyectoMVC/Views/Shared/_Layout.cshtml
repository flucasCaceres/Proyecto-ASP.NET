<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ProyectoMVC</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ProyectoMVC.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">ProyectoMVC</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <button onclick="abrirAuthModal('/Account/LoginModal')" class="btn btn-outline-primary">Ingresar</button>

                        @if (User.Identity.IsAuthenticated)
                        {
                            <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm">
                                <button type="submit">Logout</button>
                            </form>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - ProyectoMVC - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <!-- Modal contenedor único para login o registro -->
    <div class="modal fade" id="authModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" id="modal-content-container">
          @* Aquí, al llamar abrirAuthModal("/Account/RegisterModal"), se inyectará _RegisterModal.cshtml *@
        </div>
      </div>
    </div>

<script>
  async function abrirAuthModal(ruta) {
    console.log("🧩 abrirAuthModal invocado con ruta:", ruta);
    const modalEl = document.getElementById("authModal");

    // 1) Si hay un modal ya abierto, lo cerramos y limpiamos backdrops:
    const oldInstance = bootstrap.Modal.getInstance(modalEl);
    if (oldInstance) {
      oldInstance.hide();
      modalEl.classList.remove("show");
      document.body.classList.remove("modal-open");
      document.querySelectorAll(".modal-backdrop").forEach(el => el.remove());
    }

    // 2) Pequeña demora para que desaparezcan backdrops anteriores
    setTimeout(async () => {
      // 3) Hacemos GET a la partial indicada (loginModal o registerModal)
      const res = await fetch(ruta);
      const html = await res.text();

      // 4) Inyectamos ese HTML dentro de "#modal-content-container"
      document.getElementById("modal-content-container").innerHTML = html;

      // 5) Mostramos el modal genérico
      const newInstance = new bootstrap.Modal(modalEl);
      newInstance.show();

      // 6) Ahora distinguimos qué partial acabamos de cargar:
      if (ruta.includes("RegisterModal")) {
        // ─────────────────────────────────────────────────────
        //   ACABAMOS DE INYECTAR EL _RegisterModal.cshtml
        // ─────────────────────────────────────────────────────
        const form = document.getElementById("registerForm");
        console.log("🧩 Buscando <form id='registerForm'> →", form);

        if (form) {
          form.addEventListener("submit", async function (e) {
            e.preventDefault();
            console.log("📤 Disparó submit de registerForm. Enviando datos…");

            const formData = new FormData(form);
            const response = await fetch("/Account/RegisterModal", {
              method: "POST",
              body: formData,
              headers: {
                'RequestVerificationToken': formData.get('__RequestVerificationToken')
              }
            });

            const contentType = response.headers.get("content-type");
            console.log("🧪 Response status:", response.status, "content-type:", contentType);

            if (contentType && contentType.includes("application/json")) {
              const result = await response.json();
              console.log("🧪 JSON recibido:", result);
              if (result.success) {
                console.log("✅ Registro exitoso. Cerrando modal y redirigiendo…");
                const modalInstance = bootstrap.Modal.getInstance(modalEl);
                modalInstance.hide();
                window.location.href = "/Privacy/Privacy";
              }
            } else {
              // Hubo errores de validación: reemplazamos HTML parcial
              const htmlError = await response.text();
              document.getElementById("modal-content-container").innerHTML = htmlError;
              abrirAuthModal(ruta); // re-enganchar si se corrigieron campos
            }
          });
        } else {
          console.error("❌ No se encontró ningún <form id='registerForm'> dentro del modal (RegisterModal).");
        }
      }
      else if (ruta.includes("LoginModal")) {
        // ─────────────────────────────────────────────────────
        //   ACABAMOS DE INYECTAR EL _LoginModal.cshtml
        // ─────────────────────────────────────────────────────
        const formLogin = document.getElementById("loginForm");
        console.log("🧩 Buscando <form id='loginForm'> →", formLogin);

        if (formLogin) {
          formLogin.addEventListener("submit", async function (e) {
            e.preventDefault();
            console.log("📤 Disparó submit de loginForm. Enviando datos…");

            const formDataLogin = new FormData(formLogin);
            const responseLogin = await fetch("/Account/Login", {
              method: "POST",
              body: formDataLogin,
              headers: {
                'RequestVerificationToken': formDataLogin.get('__RequestVerificationToken')
              }
            });

            const contentTypeLogin = responseLogin.headers.get("content-type");
            console.log("🧪 Response status (login):", responseLogin.status, "content-type:", contentTypeLogin);

            if (contentTypeLogin && contentTypeLogin.includes("application/json")) {
              const resultLogin = await responseLogin.json();
              console.log("🧪 JSON login recibido:", resultLogin);
              if (resultLogin.success) {
                console.log("✅ Login exitoso. Cerrando modal y redirigiendo…");
                const modalInstance = bootstrap.Modal.getInstance(modalEl);
                modalInstance.hide();
                window.location.href = "/Home/Index"; // o la ruta que uses
              }
            } else {
              // Errores de login: recargamos el partial con validaciones
              const htmlErrorLogin = await responseLogin.text();
              document.getElementById("modal-content-container").innerHTML = htmlErrorLogin;
              abrirAuthModal(ruta); // re-engancha el formulario de login
            }
          });
        } else {
          console.error("❌ No se encontró ningún <form id='loginForm'> dentro del modal (LoginModal).");
        }
      }
      else {
        console.warn("⚠️ Ruta no reconocida para enganchar formulario:", ruta);
      }
    }, 200);
  }
</script>

</body>
</html>